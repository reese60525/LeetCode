當然可以，讓我們用一個更複雜的例子來演示這種改進的電梯演算法，並且我們將處理更複雜的請求序列來幫助理解。

複雜例子
假設有如下請求：

當前電梯位置：3 樓
目標樓層：9 樓
初始請求：5 樓請求向下、7 樓請求向上、2 樓請求向上
處理過程
初始狀態：

當前電梯位置：3 樓
目標樓層：9 樓
當前方向：向上
請求序列：5 樓向下、7 樓向上、2 樓向上
運行步驟：
時間單位 1：
當前電梯位置：3 -> 4
請求序列：5 樓向下、7 樓向上、2 樓向上
當前目標樓層：9 樓
當前方向：向上
時間單位 2：
當前電梯位置：4 -> 5
請求序列：5 樓向下（pass 因為方向不同）、7 樓向上、2 樓向上
當前目標樓層：9 樓
當前方向：向上
時間單位 3：
當前電梯位置：5 -> 6
請求序列：5 樓向下（等待）、7 樓向上、2 樓向上
當前目標樓層：9 樓
當前方向：向上
時間單位 4：
當前電梯位置：6 -> 7
處理 7 樓請求，用戶進入電梯，選擇目標樓層（假設為 10 樓）
請求序列：5 樓向下（等待）、2 樓向上
當前目標樓層：9 樓（然後 10 樓）
當前方向：向上
時間單位 5：
當前電梯位置：7 -> 8
請求序列：5 樓向下（等待）、2 樓向上
當前目標樓層：9 樓
當前方向：向上
時間單位 6：
當前電梯位置：8 -> 9
處理 9 樓請求，用戶進入電梯，選擇目標樓層（假設為 1 樓）
請求序列：5 樓向下（等待）、2 樓向上
當前目標樓層：10 樓
當前方向：向上
時間單位 7：
當前電梯位置：9 -> 10
處理 10 樓請求，用戶進入電梯
請求序列：5 樓向下（等待）、2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 8：
當前電梯位置：10 -> 9
請求序列：5 樓向下、2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 9：
當前電梯位置：9 -> 8
請求序列：5 樓向下、2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 10：
當前電梯位置：8 -> 7
請求序列：5 樓向下、2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 11：
當前電梯位置：7 -> 6
請求序列：5 樓向下、2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 12：
當前電梯位置：6 -> 5
處理 5 樓請求，用戶進入電梯
請求序列：2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 13：
當前電梯位置：5 -> 4
請求序列：2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 14：
當前電梯位置：4 -> 3
請求序列：2 樓向上
當前目標樓層：1 樓
當前方向：向下
時間單位 15：
當前電梯位置：3 -> 2
處理 2 樓請求，用戶進入電梯
請求序列：無
當前目標樓層：1 樓
當前方向：向下